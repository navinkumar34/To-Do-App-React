{"version":3,"sources":["components/header.js","routes/route.js","states/taskState.js","components/taskTable.js","components/taskStatus.js","pages/home.js","pages/task.js","App.js","index.js"],"names":["Header","react_default","a","createElement","Navbar","light","expand","style","background","fontFamily","fontWeight","react_router_dom","to","className","routes","home","task","tasksState","atom","key","default","window","localStorage","getItem","JSON","parse","text","isComplete","priority","description","tasksStatusSelector","selector","get","_ref","tasks","lows","mediums","highs","completeds","incompletes","i","length","cPriority","cTaskName","cDescription","cIndex","isSubmitting","cCompletion","filPriority","filCompletion","TaskTable","history","useHistory","_useRecoilState","useRecoilState","_useRecoilState2","Object","slicedToArray","Tasks","setTasks","setTaskName","useSetRecoilState","setPriority","setDescription","setSelectedIndex","setSubmitting","setCompleted","_useRecoilState3","_useRecoilState4","filterpri","setFilterpri","_useRecoilState5","_useRecoilState6","filtercomp","setFiltercomp","useEffect","setItem","stringify","Table","Button","Label","for","id","Input","type","name","value","onChange","event","target","required","map","taskIndex","comptask","checked","selectedTaskIndex","objectSpread2","onClick","push","task1","slice","task2","concat","toConsumableArray","removeTask","TaskStatus","status","useRecoilValue","val","valIndex","Home","padding","taskTable","taskStatus","Task","TaskName","Priority","_useRecoilState7","_useRecoilState8","Description","_useRecoilState9","_useRecoilState10","selectedIndex","_useRecoilState11","_useRecoilState12","submitting","_useRecoilState13","_useRecoilState14","completed","Form","FormGroup","onSubmit","newTask","newTasksArr","placeholder","Container","Row","Col","Spinner","color","App","Fragment","header","react_router","exact","path","pages_task","from","rootElement","document","getElementById","ReactDOM","render","StrictMode","dist"],"mappings":"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","file":"static/js/main.a19955d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Navbar\r\n      light\r\n      expand=\"md\"\r\n      style={{\r\n        background: `linear-gradient(to right, #ff416c, #ff4b2b)`,\r\n        fontFamily: `\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif`,\r\n        fontWeight: \"300\"\r\n      }}\r\n    >\r\n      <NavLink to=\"/\" className=\"navbar-brand\">\r\n        To-Do App\r\n      </NavLink>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const routes = {\r\n  home: \"/\",\r\n  task: \"/task\"\r\n};\r\n\r\nexport default routes;\r\n","import { atom, selector } from \"recoil\";\r\n\r\nexport const tasksState = atom({\r\n  key: \"tasksState\",\r\n  default: window.localStorage.getItem(\"tasks-data\")\r\n    ? JSON.parse(window.localStorage.getItem(\"tasks-data\"))\r\n    : [\r\n        {\r\n          text: \"Go for a walk\",\r\n          isComplete: false,\r\n          priority: \"Low\",\r\n          description: \"Need to Cover 5 km today\"\r\n        },\r\n        {\r\n          text: \"Watch Movie\",\r\n          isComplete: true,\r\n          priority: \"Medium\",\r\n          description: \"Watch a Movie on NetFlix\"\r\n        }\r\n      ]\r\n});\r\n\r\nexport const tasksStatusSelector = selector({\r\n  key: \"tasksStatusSelector\",\r\n  get: ({ get }) => {\r\n    const tasks = get(tasksState);\r\n    let lows = 0;\r\n    let mediums = 0;\r\n    let highs = 0;\r\n    let completeds = 0;\r\n    let incompletes = 0;\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].isComplete) completeds++;\r\n      else incompletes++;\r\n      if (tasks[i].priority === \"High\") highs++;\r\n      else if (tasks[i].priority === \"Medium\") mediums++;\r\n      else lows++;\r\n    }\r\n    return [\r\n      [\"Completed Tasks\", completeds],\r\n      [\"Pending Tasks\", incompletes],\r\n      [\"High Priority Tasks\", highs],\r\n      [\"Medium Priority Tasks\", mediums],\r\n      [\"Low Priority Tasks\", lows]\r\n    ];\r\n  }\r\n});\r\n\r\nexport const cPriority = atom({\r\n  key: \"cPriority\",\r\n  default: \"Low\"\r\n});\r\n\r\nexport const cTaskName = atom({\r\n  key: \"cTaskName\",\r\n  default: \"\"\r\n});\r\n\r\nexport const cDescription = atom({\r\n  key: \"cDescription\",\r\n  default: \"\"\r\n});\r\n\r\nexport const cIndex = atom({\r\n  key: \"cIndex\",\r\n  default: -1\r\n});\r\n\r\nexport const isSubmitting = atom({\r\n  key: \"isSubmitting\",\r\n  default: false\r\n});\r\n\r\nexport const cCompletion = atom({\r\n  key: \"isCompletion\",\r\n  default: false\r\n});\r\n\r\nexport const alertText = atom({\r\n  key: \"alertText\",\r\n  default: \"\"\r\n});\r\n\r\nexport const filPriority = atom({\r\n  key: \"filPriority\",\r\n  default: \"All\"\r\n});\r\n\r\nexport const filCompletion = atom({\r\n  key: \"filCompletion\",\r\n  default: \"All\"\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Table, Button, Input, Label } from \"reactstrap\";\r\nimport {\r\n  tasksState,\r\n  filPriority,\r\n  filCompletion,\r\n  cTaskName,\r\n  cPriority,\r\n  cDescription,\r\n  cIndex,\r\n  isSubmitting,\r\n  cCompletion\r\n} from \"../states/taskState\";\r\nimport routes from \"../routes/route\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst comptask = (task, filterpri, filtercomp) => {\r\n  if (filtercomp === \"All\") {\r\n    if (filterpri === \"All\") {\r\n      return true;\r\n    } else {\r\n      if (task.priority === filterpri) return true;\r\n    }\r\n    return false;\r\n  } else if (filtercomp === \"Completed\") {\r\n    if (task.isComplete) {\r\n      if (filterpri === \"All\") {\r\n        return true;\r\n      } else {\r\n        if (task.priority === filterpri) return true;\r\n      }\r\n    }\r\n    return false;\r\n  } else {\r\n    if (!task.isComplete) {\r\n      if (filterpri === \"All\") {\r\n        return true;\r\n      } else {\r\n        if (task.priority === filterpri) return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n};\r\n\r\nconst TaskTable = () => {\r\n  const history = useHistory();\r\n  const [Tasks, setTasks] = useRecoilState(tasksState);\r\n  const setTaskName = useSetRecoilState(cTaskName);\r\n  const setPriority = useSetRecoilState(cPriority);\r\n  const setDescription = useSetRecoilState(cDescription);\r\n  const setSelectedIndex = useSetRecoilState(cIndex);\r\n  const setSubmitting = useSetRecoilState(isSubmitting);\r\n  const setCompleted = useSetRecoilState(cCompletion);\r\n  const [filterpri, setFilterpri] = useRecoilState(filPriority);\r\n  const [filtercomp, setFiltercomp] = useRecoilState(filCompletion);\r\n  const editCompletion = (selectedTaskIndex) => {\r\n    setTasks(\r\n      Tasks.map((task, taskIndex) => {\r\n        if (taskIndex === selectedTaskIndex) {\r\n          return {\r\n            ...task,\r\n            isComplete: !task.isComplete\r\n          };\r\n        }\r\n\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeTask = (selectedTaskIndex) => {\r\n    const task1 = Tasks.slice(0, selectedTaskIndex);\r\n    const task2 = Tasks.slice(selectedTaskIndex + 1, Tasks.length);\r\n    setTasks([...task1, ...task2]);\r\n  };\r\n\r\n  const filterpriChange = (event) => {\r\n    setFilterpri(event.target.value);\r\n  };\r\n\r\n  const filtercompChange = (event) => {\r\n    setFiltercomp(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"tasks-data\", JSON.stringify(Tasks));\r\n  });\r\n\r\n  return (\r\n    <div className=\"showTaskDiv\">\r\n      <Table className=\"headtable\">\r\n        <thead></thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <Button className=\"btn btn-primary\">\r\n                <NavLink to=\"/task\"> Click to Add Task </NavLink>\r\n              </Button>\r\n            </td>\r\n            <td>\r\n              <Label for=\"filterPriority\" id=\"filterLabel\">\r\n                Filter:\r\n              </Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"filterPriority\"\r\n                id=\"filterPriority\"\r\n                value={filterpri}\r\n                onChange={filterpriChange}\r\n                required\r\n              >\r\n                <option value=\"All\">All Priority</option>\r\n                <option value=\"High\">High Priority</option>\r\n                <option value=\"Medium\">Medium Priority</option>\r\n                <option value=\"Low\">Low Priority</option>\r\n              </Input>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"filterCompletion\"\r\n                id=\"filterCompletion\"\r\n                value={filtercomp}\r\n                onChange={filtercompChange}\r\n                required\r\n              >\r\n                <option value=\"All\">All Completions</option>\r\n                <option value=\"Completed\">Completed</option>\r\n                <option value=\"Incomplete\">Incomplete</option>\r\n              </Input>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      <h4>\r\n        <b>Your Tasks</b>\r\n      </h4>\r\n      <Table className=\"tableTask\">\r\n        <thead>\r\n          <tr>\r\n            <th>Completed</th>\r\n            <th>Task</th>\r\n            <th>Priority</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Tasks.map((task, taskIndex) => {\r\n            const checkboxChangeHandler = () => editCompletion(taskIndex);\r\n            const taskRemover = () => removeTask(taskIndex);\r\n            const taskViewer = () => {\r\n              setTasks(Tasks);\r\n              setTaskName(Tasks[taskIndex].text);\r\n              setPriority(Tasks[taskIndex].priority);\r\n              setCompleted(Tasks[taskIndex].isComplete);\r\n              setSelectedIndex(taskIndex);\r\n              setDescription(Tasks[taskIndex].description);\r\n              setSubmitting(false);\r\n              history.push(routes.task);\r\n            };\r\n            return comptask(task, filterpri, filtercomp) ? (\r\n              <tr key={taskIndex}>\r\n                <td>\r\n                  <Input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    checked={task.isComplete}\r\n                    onChange={checkboxChangeHandler}\r\n                  />\r\n                </td>\r\n                <td>{task.text}</td>\r\n                <td>{task.priority}</td>\r\n                <td>\r\n                  <Button className=\"btn btn-info\" onClick={taskViewer}>\r\n                    View\r\n                  </Button>\r\n                  <Button className=\"btn btn-danger\" onClick={taskRemover}>\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ) : null;\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <br />\r\n      <Button className=\"btn btn-primary\">\r\n        <NavLink to=\"/task\"> Click to Add Task </NavLink>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskTable;\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { tasksStatusSelector } from \"../states/taskState\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nconst TaskStatus = () => {\r\n  const status = useRecoilValue(tasksStatusSelector);\r\n  return (\r\n    <div className=\"status-div\">\r\n      <h4>\r\n        <b>Tasks Status</b>\r\n      </h4>\r\n      <Table>\r\n        <thead></thead>\r\n        <tbody>\r\n          {status.map((val, valIndex) => {\r\n            return (\r\n              <tr key={valIndex}>\r\n                <td>{val[0]}</td>\r\n                <td>:</td>\r\n                <td>{val[1]}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskStatus;\r\n","import React, { useEffect } from \"react\";\r\nimport TaskTable from \"../components/taskTable\";\r\nimport TaskStatus from \"../components/taskStatus\";\r\nimport {\r\n  cTaskName,\r\n  cPriority,\r\n  cDescription,\r\n  cIndex,\r\n  isSubmitting,\r\n  cCompletion\r\n} from \"../states/taskState\";\r\nimport { useSetRecoilState } from \"recoil\";\r\n\r\nconst Home = () => {\r\n  const setTaskName = useSetRecoilState(cTaskName);\r\n  const setPriority = useSetRecoilState(cPriority);\r\n  const setDescription = useSetRecoilState(cDescription);\r\n  const setSelectedIndex = useSetRecoilState(cIndex);\r\n  const setSubmitting = useSetRecoilState(isSubmitting);\r\n  const setCompleted = useSetRecoilState(cCompletion);\r\n  useEffect(() => {\r\n    setTaskName(\"\");\r\n    setPriority(\"Low\");\r\n    setCompleted(false);\r\n    setSelectedIndex(-1);\r\n    setDescription(\"\");\r\n    setSubmitting(false);\r\n  });\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <TaskTable />\r\n      <TaskStatus />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\nimport routes from \"../routes/route\";\r\nimport {\r\n  tasksState,\r\n  cTaskName,\r\n  cPriority,\r\n  cDescription,\r\n  cIndex,\r\n  isSubmitting,\r\n  cCompletion\r\n} from \"../states/taskState\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Spinner,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nconst Task = () => {\r\n  const history = useHistory();\r\n  const [Tasks, setTasks] = useRecoilState(tasksState);\r\n  const [TaskName, setTaskName] = useRecoilState(cTaskName);\r\n  const [Priority, setPriority] = useRecoilState(cPriority);\r\n  const [Description, setDescription] = useRecoilState(cDescription);\r\n  const [selectedIndex, setSelectedIndex] = useRecoilState(cIndex);\r\n  const [submitting, setSubmitting] = useRecoilState(isSubmitting);\r\n  const [completed, setCompleted] = useRecoilState(cCompletion);\r\n\r\n  const TaskNameChange = (event) => {\r\n    setTaskName(event.target.value);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setPriority(event.target.value);\r\n  };\r\n  const DescChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const saveTask = () => {\r\n    setSubmitting(true);\r\n    const newTask = {\r\n      text: TaskName,\r\n      isComplete: completed,\r\n      priority: Priority,\r\n      description: Description\r\n    };\r\n    let newTasksArr = Tasks;\r\n    selectedIndex === -1\r\n      ? setTasks(newTasksArr.concat(newTask))\r\n      : setTasks([\r\n          ...newTasksArr.slice(0, selectedIndex),\r\n          ...newTasksArr.slice(selectedIndex + 1, newTasksArr.length),\r\n          newTask\r\n        ]);\r\n    setTaskName(\"\");\r\n    setPriority(\"Low\");\r\n    setCompleted(false);\r\n    setSelectedIndex(-1);\r\n    setDescription(\"\");\r\n    setSubmitting(false);\r\n    history.push(routes.home);\r\n  };\r\n\r\n  return (\r\n    <div className=\"taskDiv\">\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"taskName\" onSubmit={saveTask}>\r\n            Task Name :\r\n          </Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"taskName\"\r\n            id=\"taskName\"\r\n            placeholder=\"Enter New Task Here....\"\r\n            value={TaskName}\r\n            onChange={TaskNameChange}\r\n            required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"taskPriority\">Select Priority:</Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"taskPriority\"\r\n            id=\"taskPriority\"\r\n            value={Priority}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"High\">High</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"Low\">Low</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"taskDescription\">Task Description</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            value={Description}\r\n            onChange={DescChange}\r\n            name=\"taskDescription\"\r\n            id=\"taskDescription\"\r\n          />\r\n        </FormGroup>\r\n        <Container>\r\n          <Row>\r\n            <Col></Col>\r\n            {submitting ? (\r\n              <Spinner type=\"grow\" color=\"primary\" />\r\n            ) : (\r\n              <Button type=\"submit\">Save Task</Button>\r\n            )}\r\n            <Col>\r\n              <Button className=\"btn btn-primary\">\r\n                <NavLink to=\"/\" style={{ color: \"white\" }}>\r\n                  Go to Home\r\n                </NavLink>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Header from \"./components/header\";\nimport routes from \"./routes/route\";\nimport Home from \"./pages/home\";\nimport Task from \"./pages/task\";\n\nexport default function App() {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path={routes.home}>\n          <Home />\n        </Route>\n        <Route path={routes.task}>\n          <Task />\n        </Route>\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <RecoilRoot>\n      <App />\n      </RecoilRoot>\n    </Router>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}